# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

########### These MUST be filled in for a storm configuration
 storm.zookeeper.servers:
#     - "localhost"
#     - "server2"
     - "172.19.31.253"
     - "172.19.31.196"
     - "172.19.31.189"

 storm.zookeeper.port: 2181
 
 nimbus.host: “localhost”
 nimbus.thrift.port: 6627
 nimbus.thrift.threads: 64
 nimbus.childopts: "-Xmx1024m"
 nimbus.task.timeout.secs: 30
 nimbus.supervisor.timeout.secs: 60

 supervisor.slots.ports:
     - 6700

 supervisor.childopts: "-Xmx512m"

## Total Number of Nodes
 topology.workers: 3

 topology.enable.message.timeouts: true

# ##### These may optionally be filled in:
#    
# maximum amount of time a message has to complete before it's considered failed
 topology.message.timeout.secs: 300
 topology.max.spout.pending: 1000
 topology.acker.executors: 10

## List of custom serializations
# topology.kryo.register:
#     - ra.rta.models.Application
#     - ra.rta.models.CardAccount
#     - ra.rta.models.CardTransaction
#     - ra.rta.models.CreditAccount
#     - ra.rta.models.CreditTransaction
#     - ra.rta.models.Customer
#     - ra.rta.models.CustomerInteraction
#     - ra.rta.models.DepositAccount
#     - ra.rta.models.DepositTransaction
#     - ra.rta.models.Envelope
#     - ra.rta.models.EventException
#     - ra.rta.models.ExactMatchFailure
#     - ra.rta.models.InsuranceAccount
#     - ra.rta.models.InsuranceTransaction
#     - ra.rta.models.KPI
#     - ra.rta.models.KPICustomerSummary
#     - ra.rta.models.KPIPartnerSummary
#     - ra.rta.models.LineAccount
#     - ra.rta.models.LineTransaction
#     - ra.rta.models.LoanAccount
#     - ra.rta.models.LoanTransaction
#     - ra.rta.models.OtherAccount
#     - ra.rta.models.Partner
#     - ra.rta.models.PartnerNotFoundException
#     - ra.rta.models.Record

## List of custom kryo decorators
# topology.kryo.decorators:
#     - org.mycompany.MyDecorator

 topology.fall.back.on.java.serialization: false

 topology.cassandra.seednode: 172.19.32.121
 topology.zookeeper.list: kaf-01-i.resolvingarchitecture.io:2181,kaf-02-i.resolvingarchitecture.io:2181,kaf-03-i.resolvingarchitecture.io:2181
 topology.kafka.broker.list: kaf01-i:9092, kaf02-i:9092, kaf03-i:9092

 topology.bolts.contentenricher.maxretries: 5

 topology.referencedata.main: ra.rta.rt.topologies.ReferenceDataProcessingTopology
 topology.referencedata.topic: reference
 topology.referencedata.workers: 1
 topology.referencedata.kafka.parallelism: 1
 topology.referencedata.transform.parallelism: 1
 topology.referencedata.contentenricher.parallelism: 1
 topology.referencedata.analytics.parallelism: 4
 topology.referencedata.classification.parallelism: 2
 topology.referencedata.publish.parallelism: 6
 topology.referencedata.rules.kBaseName: FlagKB

 topology.transaction.main: ra.rta.rt.topologies.TransactionProcessingTopology
 topology.transaction.topic: transaction
 topology.transaction.workers: 1
 topology.transaction.kafka.parallelism: 1
 topology.transaction.transform.parallelism: 1
 topology.transaction.contentenricher.parallelism: 1
 topology.transaction.classification.parallelism: 2
 topology.transaction.analytics.parallelism: 1
 topology.transaction.publish.parallelism: 6
 topology.transaction.rules.kBaseName: RfmKB

 topology.summarizing.main: ra.rta.rt.topologies.RFMSummarizationProcessingTopology
 topology.summarizing.topic: summary
 topology.summarizing.workers: 1
 topology.summarizing.customerKPIsplitter.parallelism: 1
 topology.summarizing.summarizecustomerrfm.parallelism: 4
 topology.summarizing.summarizepartnerrfm.parallelism: 1

 topology.tester.main: ra.rta.rt.topologies.TesterTopology
 topology.tester.topic: transation
 topology.tester.workers: 3
 topology.tester.kafka.parallelism: 1
 topology.tester.tester.parallelism: 1

## Locations of the drpc servers
# drpc.servers:
#     - "server1"
#     - "server2"

 ### worker.* configs are for task workers
 worker.childopts: "-Xmx768m"

## Metrics Consumers
# topology.metrics.consumer.register:
#   - class: "org.apache.storm.metric.LoggingMetricsConsumer"
#     parallelism.hint: 1
#   - class: "org.mycompany.MyMetricsConsumer"
#     parallelism.hint: 1
#     argument:
#       - endpoint: "metrics-collector.mycompany.org"
#
## UI
 ui.port: 8081
 ui.childopts: “-Xmx768m”

 kafka.spout.consumer.group: kafka_spout