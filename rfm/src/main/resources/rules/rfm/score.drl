package rfm;
dialect  "mvel"

import ra.rta.models.*;

rule "top tritile recency"
    when
        $c: Customer()
        $k: KPI(recency >= KPIGroupSummary.recencyBucket3Floor) from $c.KPIS
    then
        $k.recencyScore = 3;
end

rule "middle tritile recency"
    when
        $c: Customer()
        $k: KPI(recency >= KPIGroupSummary.recencyBucket2Floor && recency < KPIGroupSummary.recencyBucket3Floor) from $c.KPIS
    then
        $k.recencyScore = 2;
end

rule "lowest tritile recency"
    when
        $c: Customer()
        $k: KPI(recency < KPIGroupSummary.recencyBucket2Floor) from $c.KPIS
    then
        $k.recencyScore = 1;
end

rule "top tritile frequency"
    when
        $c: Customer()
        $k: KPI((frequency + KPIIndividualSummary.frequency) >= KPIGroupSummary.frequencyBucket3Floor) from $c.KPIS
    then
        $k.frequencyScore = 3;
end

rule "middle tritile frequency"
    when
        $c: Customer()
        $k: KPI(((frequency + KPIIndividualSummary.frequency) >= KPIGroupSummary.frequencyBucket2Floor) && ((frequency + KPIIndividualSummary.frequency) < KPIGroupSummary.frequencyBucket3Floor)) from $c.KPIS
    then
        $k.frequencyScore = 2;
end

rule "lowest tritile frequency"
    when
        $c: Customer()
        $k: KPI((frequency + KPIIndividualSummary.frequency) < KPIGroupSummary.frequencyBucket2Floor) from $c.KPIS
    then
        $k.frequencyScore = 1;
end

rule "top tritile monetary"
    when
        $c: Customer()
        $k: KPI((monetary + KPIIndividualSummary.monetary) >= KPIGroupSummary.monetaryBucket3Floor) from $c.KPIS
    then
        $k.monetaryScore = 3;
end

rule "middle tritile monetary"
    when
        $c: Customer()
        $k: KPI(((monetary + KPIIndividualSummary.monetary) >= KPIGroupSummary.monetaryBucket2Floor) && ((monetary + KPIIndividualSummary.monetary) < KPIGroupSummary.monetaryBucket3Floor)) from $c.KPIS
    then
        $k.monetaryScore = 2;
end

rule "lowest tritile monetary"
    when
        $c: Customer()
        $k: KPI((monetary + KPIIndividualSummary.monetary) < KPIGroupSummary.monetaryBucket2Floor) from $c.KPIS
    then
        $k.monetaryScore = 1;
end